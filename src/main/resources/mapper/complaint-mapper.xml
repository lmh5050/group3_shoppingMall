<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.shoppingmall.repository.complaint.ComplaintRepository">

    <!-- 해당 고객의 모든 complaint 목록 조회 -->
    <select id="findComplaintsByCustomerId" resultType="org.example.shoppingmall.dto.complaint.ComplaintDto">
        SELECT
            *
        FROM complaint
        WHERE order_id IN (
            SELECT order_id
            FROM orders
            WHERE customer_id = #{customerId}
            )
        ORDER BY request_datetime ASC
    </select>
    
    <!-- 민원 저장 -->
    <insert id="insertComplaint" parameterType="org.example.shoppingmall.dto.complaint.ComplaintDto">
        INSERT INTO complaint (
                               complaint_id,
                               complaint_type_id,
                               reason,
                               pickup_address,
                               status,
                               description,
                               request_datetime,
                               expected_refund_amount,
                               shipping_price,
                               order_id,
                               product_name
        )
        VALUES (
                  #{complaintId},
                  #{complaintTypeId},
                  #{reason},
                  #{pickupAddress},
                  #{status},
                  #{description},
                  #{requestDatetime},
                  #{expectedRefundAmount},
                  #{shippingPrice},
                  #{orderId},
                  #{productName}
                         )
    </insert>


    <!-- complaintId에 해당하는 민원 상세 정보 조회 -->
    <select id="findComplaintById" resultType="org.example.shoppingmall.dto.complaint.ComplaintDto">
        SELECT
            *
        FROM complaint
        WHERE complaint_id = #{complaintId}
    </select>

    <!-- 민원 수정 쿼리 -->
    <update id="updateComplaint" parameterType="org.example.shoppingmall.dto.complaint.ComplaintDto">
        UPDATE complaint
        SET
            reason = #{reason},
            description = #{description},
            pickup_address = #{pickupAddress},
            shipping_price = #{shippingPrice}
        WHERE complaint_id = #{complaintId}
    </update>

    <!-- 민원 삭제 쿼리 -->
    <update id="deleteComplaint" parameterType="org.example.shoppingmall.dto.complaint.ComplaintDto">
        UPDATE complaint
        SET
            delete_flag = #{deleteFlag},
            status = #{status},
            end_datetime = #{endDatetime},
            refund_amount = #{refundAmount}
        WHERE complaint_id = #{complaintId}
    </update>

    <!-- order_id에 해당하는 상품 이름 조회-->
    <select id="findProductNameByOrderId">
        SELECT
            product_name
        FROM order_detail
        WHERE order_id = #{orderId}
    </select>

    <!-- order_id에 해당하는 상품 가격 조회 -->
    <select id="findProductTotalPriceByOrderId">
        SELECT
            product_total_price
        FROM order_detail
        WHERE order_id = #{orderId}
        AND product_name = #{productName}
    </select>

    <select id="existsByOrderIdAndProductNameAndStatusNotContaining" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
        FROM complaint
        WHERE order_id = #{orderId}
          AND product_name = #{productName}
          AND status NOT LIKE '%철회%'
    </select>

</mapper>
